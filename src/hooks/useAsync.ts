import { useState, useEffect } from 'react'; export function useAsync<T>(asyncFunction: () => Promise<T>): { data: T | null; error: Error | null; isLoading: boolean } { const [data, setData] = useState<T | null>(null); const [error, setError] = useState<Error | null>(null); const [isLoading, setLoading] = useState(true); useEffect(() => { asyncFunction().then(setData).catch(setError).finally(() => setLoading(false)); }, [asyncFunction]); return { data, error, isLoading }; }